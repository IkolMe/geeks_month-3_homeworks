from aiogram import Router, F, types
from aiogram.filters import Command

start_router = Router()


@start_router.message(Command('start'))
async def start(message: types.Message):
    kb = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(
                    text='–ê–¥—Ä–µ—Å', callback_data='address'
                ),
                types.InlineKeyboardButton(
                    text='–ö–æ–Ω—Ç–∞–∫—Ç—ã', callback_data='contacts'
                ),
                types.InlineKeyboardButton(
                    text='–û –Ω–∞—Å', callback_data='about'
                )
            ],
            [
                types.InlineKeyboardButton(
                    text='–ù–∞—à –º–∞–≥–∞–∑–∏–Ω', callback_data='shop'
                ),
                types.InlineKeyboardButton(
                    text='–ù–∞—à —Å–∞–π—Ç', url='https://google.com'
                )
            ]
        ]
    )
    await message.answer(
        f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá',
        reply_markup=kb
    )


@start_router.callback_query(F.data == 'shop')
async def shop(callback: types.CallbackQuery):
    kb = types.ReplyKeyboardMarkup(
        keyboard=[
            [
                types.KeyboardButton(text='–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è'),
                types.KeyboardButton(text='–ó–¥–æ—Ä–æ–≤—å–µ –∏ —Å–ø–æ—Ä—Ç')
            ],
            [
                types.KeyboardButton(text='–î–æ–º –∏ —Ö–æ–∑—è–π—Å—Ç–≤–æ'),
                types.KeyboardButton(text='–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è')
            ],
            [
                types.KeyboardButton(text='–ë—ã—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏–∫–∞'),
                types.KeyboardButton(text='–î—Ä—É–≥–æ–µ')
            ]
        ]
    )

    msg = await callback.message.answer(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
        reply_markup=kb
    )


@start_router.message(F.text == '–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è')
async def food(message: types.Message):
    await message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è"')


@start_router.message(F.text == '–ó–¥–æ—Ä–æ–≤—å–µ –∏ —Å–ø–æ—Ä—Ç')
async def food(message: types.Message):
    await message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ó–¥–æ—Ä–æ–≤—å–µ –∏ —Å–ø–æ—Ä—Ç"')


@start_router.message(F.text == '–î–æ–º –∏ —Ö–æ–∑—è–π—Å—Ç–≤–æ')
async def food(message: types.Message):
    await message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–î–æ–º –∏ —Ö–æ–∑—è–π—Å—Ç–≤–æ"')


@start_router.message(F.text == '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è')
async def food(message: types.Message):
    await message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"')


@start_router.message(F.text == '–ë—ã—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏–∫–∞')
async def food(message: types.Message):
    await message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ë—ã—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏–∫–∞"')


@start_router.message(F.text == '–î—Ä—É–≥–æ–µ')
async def food(message: types.Message):
    await message.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–î—Ä—É–≥–æ–µ"')
